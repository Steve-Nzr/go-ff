version: "3"
services:
  broker:
    image: rabbitmq:3-alpine
    restart: on-failure
  db:
    image: postgres:11-alpine
    environment:
      POSTGRES_PASSWORD: password
      POSTGRES_USER: user
      POSTGRES_DB: db
    ports:
      - 5432:5432
    restart: on-failure
    volumes:
      - db-data:/var/lib/mysql
  cache:
    image: mariadb:10.3
    environment:
      MYSQL_RANDOM_ROOT_PASSWORD: "yes"
      MYSQL_USER: user
      MYSQL_PASSWORD: password
      MYSQL_DATABASE: db
    ports:
      - 3306:3306
    restart: on-failure
  wait_dependencies:
    image: dadarek/wait-for-dependencies
    depends_on:
      - db
      - cache
      - broker
    command: db:5432 cache:3306 broker:5672
  login:
    image: flyff-deps
    build:
      context: .
      dockerfile: deps.Dockerfile
    depends_on:
      - wait_dependencies
    environment:
      ENV_FILE: docker.env
    entrypoint: go
    command:
      - "run"
      - "login/main.go"
      - "login/packet.go"
      - "login/servers.go"
    ports:
      - 23000:23000
    restart: on-failure
    volumes:
      - .:/go/src/go-ff/
  cluster:
    image: flyff-deps
    build:
      context: .
      dockerfile: deps.Dockerfile
    depends_on:
      - wait_dependencies
    environment:
      ENV_FILE: docker.env
    entrypoint: go
    command:
      - "run"
      - "cluster/main.go"
      - "cluster/packets.go"
    ports:
      - 28000:28000
    restart: on-failure
    volumes:
      - .:/go/src/go-ff/
  connection:
    image: flyff-deps
    build:
      context: .
      dockerfile: deps.Dockerfile
    depends_on:
      - wait_dependencies
    environment:
      ENV_FILE: docker.env
    entrypoint: go
    command:
      - "run"
      - "connectionserver/main.go"
    ports:
      - 5400:5400
    restart: on-failure
    volumes:
      - .:/go/src/go-ff/
  entity:
    image: flyff-deps
    build:
      context: .
      dockerfile: deps.Dockerfile
    depends_on:
      - wait_dependencies
    environment:
      ENV_FILE: docker.env
    entrypoint: go
    command:
      - "run"
      - "entity/main.go"
    restart: on-failure
    volumes:
      - .:/go/src/go-ff/
  chat:
    image: flyff-deps
    build:
      context: .
      dockerfile: deps.Dockerfile
    depends_on:
      - wait_dependencies
    environment:
      ENV_FILE: docker.env
    entrypoint: go
    command:
      - "run"
      - "chat/main.go"
    restart: on-failure
    volumes:
      - .:/go/src/go-ff/
  moving:
    image: flyff-deps
    build:
      context: .
      dockerfile: deps.Dockerfile
    depends_on:
      - wait_dependencies
    environment:
      ENV_FILE: docker.env
    entrypoint: go
    command:
      - "run"
      - "moving/main.go"
    restart: on-failure
    volumes:
      - .:/go/src/go-ff/
  action:
    image: flyff-deps
    build:
      context: .
      dockerfile: deps.Dockerfile
    depends_on:
      - wait_dependencies
    environment:
      ENV_FILE: docker.env
    entrypoint: modd
    command:
      - "-f"
      - "config/modd/action.conf"
    restart: on-failure
    volumes:
      - .:/go/src/go-ff/
volumes:
  db-data:
